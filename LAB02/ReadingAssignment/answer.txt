Question 01:  If you create a constructor method to build a DVD by title then create a constructor method to build a DVD by category. Does JAVA allow you to do this?
— > No, although Java allows you to do this through constructor overloading, the types or number of paramerters have to be diifferent between method

Question 02: Is JAVA a Pass by Value or a Pass by Reference programming language?
— > Java is strictly pass by value. **Java is *always* pass-by-value**, but for objects, the **value being passed is the reference (not the actual object)**.. **Java does not support true pass-by-reference**, where a method could modify the caller's reference itself.

Question 03:
* After the call of swap(jungleDVD, cinderellaDVD) why does the title of these two
  objects still remain?
  --> In Java, arguments are passed by value, including object references. The swap method only swaps the local references inside the method, but it does not affect the original references in main. Hence, the titles remain unchanged
 * After the call of changeTitle(jungleDVD, cinderellaDVD.getTitle()) why is
   the title of the JungleDVD changed?
   --> The changeTitle method modifies the actual object’s state by calling setTitle(), which updates the title of jungleDVD. Since dvd.setTitle(title) changes the internal state of the object that dvd refers to, the change persists even after the method ends